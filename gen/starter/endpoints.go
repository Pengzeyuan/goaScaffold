// Code generated by goa v3.0.9, DO NOT EDIT.
//
// starter endpoints
//
// Command:
// $ goa gen starter/design

package starter

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "starter" service endpoints.
type Endpoints struct {
	LoginByUsername goa.Endpoint
}

// NewEndpoints wraps the methods of the "starter" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		LoginByUsername: NewLoginByUsernameEndpoint(s),
	}
}

// Use applies the given middleware to all the "starter" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.LoginByUsername = m(e.LoginByUsername)
}

// NewLoginByUsernameEndpoint returns an endpoint function that calls the
// method "LoginByUsername" of service "starter".
func NewLoginByUsernameEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LoginByUsernamePayload)
		return s.LoginByUsername(ctx, p)
	}
}
