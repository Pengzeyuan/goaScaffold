// Code generated by goa v3.2.4, DO NOT EDIT.
//
// ActualTime service
//
// Command:
// $ goa gen boot/design

package actualtime

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// 大厅排队办事实时图
type Service interface {
	// 接收数据库监听得到的数据
	GetActualTimeData(context.Context) (res *GetActualTimeDataResult, err error)
	// 接收第三方推送数据--大厅排队办事实时图基础数据
	ReceiveThirdPartyPushData(context.Context, *ReceiveThirdPartyPushDataPayload) (res *ReceiveThirdPartyPushDataResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "ActualTime"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"GetActualTimeData", "ReceiveThirdPartyPushData"}

// GetActualTimeDataResult is the result type of the ActualTime service
// GetActualTimeData method.
type GetActualTimeDataResult struct {
	// 错误码
	Errcode int
	// 错误消息
	Errmsg string
	Data   *CanalDataResp
}

// ReceiveThirdPartyPushDataPayload is the payload type of the ActualTime
// service ReceiveThirdPartyPushData method.
type ReceiveThirdPartyPushDataPayload struct {
	// 推送的具体方法
	MethodName int
	// 数据数量
	Count int
	// 第三方推送数据
	Data interface{}
}

// ReceiveThirdPartyPushDataResult is the result type of the ActualTime service
// ReceiveThirdPartyPushData method.
type ReceiveThirdPartyPushDataResult struct {
	// 错误码
	Errcode int
	// 错误消息
	Errmsg string
	// success
	Result string
}

// 数据库增量数据
type CanalDataResp struct {
	// 数据类别
	DataType int32
	// 数据
	DataInfo interface{}
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "bad_request",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeInternalServerError builds a goa.ServiceError from an error.
func MakeInternalServerError(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "internal_server_error",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
		Fault:   true,
	}
}
