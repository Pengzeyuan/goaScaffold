// Code generated by goa v3.2.4, DO NOT EDIT.
//
// entity_hall endpoints
//
// Command:
// $ goa gen boot/design

package entityhall

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "entity_hall" service endpoints.
type Endpoints struct {
	WaitLineOverview goa.Endpoint
}

// NewEndpoints wraps the methods of the "entity_hall" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		WaitLineOverview: NewWaitLineOverviewEndpoint(s),
	}
}

// Use applies the given middleware to all the "entity_hall" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.WaitLineOverview = m(e.WaitLineOverview)
}

// NewWaitLineOverviewEndpoint returns an endpoint function that calls the
// method "WaitLineOverview" of service "entity_hall".
func NewWaitLineOverviewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*WaitLineOverviewPayload)
		return s.WaitLineOverview(ctx, p)
	}
}
